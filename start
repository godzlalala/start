#!/bin/bash
PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:~/bin
export PATH
clear

	if [ -f /etc/redhat-release ];then
        OS=CentOS

    elif [ ! -z "`cat /etc/issue | grep bian`" ];then
        OS=Debian

    elif [ ! -z "`cat /etc/issue | grep Ubuntu`" ];then
        OS=Ubuntu
    else
        echo "Not support OS, Please reinstall OS and retry!"
        exit 1
    fi

	
function update(){
	if [ "$OS" == 'CentOS' ]; then
		echo "ready to update and install some components"
		sleep 5
		yum update -y
		yum remove http* apache* -y
		yum install wget unzip tar python screen make gcc git -y
	else
		echo "ready to update and install some components"
		sleep 5
		apt-get update -y
		apt-get remove http* apache* -y
		apt-get install vim wget unzip tar python screen make gcc git -y
	fi
}

function speedtest(){
wget --no-check-certificate https://raw.github.com/sivel/speedtest-cli/master/speedtest_cli.py
chmod a+rx speedtest_cli.py
mv speedtest_cli.py /usr/local/bin/speedtest-cli
chown root:root /usr/local/bin/speedtest-cli
#speedtest-cli
}

function ruisu(){
read -p "Do you want to install free ServerSpeeder enter y to install others to skip" choice
if [ "$choice" = "y" ]; then
wget -N --no-check-certificate https://raw.githubusercontent.com/91yun/serverspeeder/master/serverspeeder-all.sh
bash serverspeeder-all.sh
wget -N --no-check-certificate https://raw.githubusercontent.com/godzlalala/start/master/rs.sh
chmod +x rs.sh
else
echo "You do not want to install ServerSpeeder"
sleep 3
fi
}

function ddcc(){

	if [ "$OS" == 'CentOS' ]; then
	 yum install ctag* gcc-c++ perl -y
	else
	 apt-get install gcc ctags perl -y
	fi
read -p "Do you want to install DDCC script enter y to install others to skip" choiceddcc
if [ "$choiceddcc" = "y" ]; then
wget http://cos.looooool.cn/linux/lop.pl
wget http://cos.looooool.cn/linux/webbench-1.5.tar.gz
if [ ! -f "lop.pl" ]; then
  echo "download faild change the mirrors"
  sleep 2
  wget  http://7u2tjs.com1.z0.glb.clouddn.com/lop.pl
fi

if [ ! -f "webbench-1.5.tar.gz" ]; then
  echo "download faild change the mirrors"
  sleep 2
  wget http://blog.s135.com/soft/linux/webbench/webbench-1.5.tar.gz
fi
tar zxvf webbench-1.5.tar.gz
cd webbench-1.5
make && make install
cd
else
echo "You do not want to install DDCC script"
sleep 3
fi
}

function socat(){

read -p "Do you want to install socat enter y to install other to skip" choicesocat
if [ "$choicesocat" = "y" ]; then
 	if [ "$OS" == 'CentOS' ]; then
	 wget –no-cache http://www.convirture.com/repos/definitions/rhel/6.x/convirt.repo -O /etc/yum.repos.d/convirt.repo
	 yum makecache
	 yum install socat -y
	else
	 apt-get install socat -y
	fi
else
echo "You do not want to install socat"
sleep 3
fi


}


function installover(){
echo "
*******************************

run speedtest-cli to test your network

*******************************
"
echo "
	And there are more script below (you can run more to get these info again)
*************************************
run  bash start lnmp to install lnmp
run  bash start ss to install shadowsocks
./ss.sh start/restart/stop/status/peizhi
./rs.sh start/restart/stop/status/peizhi
***************************************

#################################################

Thanks for use :)

" >> /etc/more.txt

cat /etc/more.txt
}

function oneinstack(){

clear
echo "ready to install oneinstack"
sleep 5
if [ "$OS" == 'CentOS' ]; then
 yum update
else 
 apt-get update
fi
wget http://mirrors.linuxeye.com/oneinstack-full.tar.gz
tar xzf oneinstack-full.tar.gz
cd oneinstack
./install.sh
}

function sspy(){

clear
echo "ready to install shadowsocks"
sleep 5
if [ "$OS" == 'CentOS' ]; then
 yum update
else 
 apt-get update
fi
wget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks.sh
chmod +x shadowsocks.sh
./shadowsocks.sh 2>&1 | tee shadowsocks.log
}


function ss(){

read  -p "Which shandowsocks version you want to install  press 1 to install python press 2 to install libev （default libev version）: " ssversion
if [ "ssversion" == "1" ];then
 wget --no-check-certificate https://raw.githubusercontent.com/godzlalala/start/master/shadowsocks.sh
 wget --no-check-certificate https://raw.githubusercontent.com/godzlalala/start/master/ss.sh
 chmod +x ss.sh
 chmod +x shadowsocks.sh
 ./shadowsocks.sh 2>&1 | tee shadowsocks.log
else
 if [ "$OS" == 'CentOS' ]; then
  wget --no-check-certificate https://raw.githubusercontent.com/godzlalala/start/master/Shadowsocks-libev.sh
  wget --no-check-certificate https://raw.githubusercontent.com/godzlalala/start/master/ss.sh
  chmod +x ss.sh
  chmod +x Shadowsocks-libev.sh
  ./Shadowsocks-libev.sh 2>&1 | tee shadowsocks-libev.log
 else 
  wget --no-check-certificate https://raw.githubusercontent.com/godzlalala/start/master/shadowsocks-libev-debian.sh
  wget --no-check-certificate https://raw.githubusercontent.com/godzlalala/start/master/ss.sh
  chmod +x ss.sh
  chmod +x shadowsocks-libev-debian.sh
  ./shadowsocks-libev-debian.sh 2>&1 | tee shadowsocks-libev-debian.log
 fi
fi
}

function swap(){

read -p "Do you want to make swap file openvz is not support enter y to install others to skip " choice
if [ "$choice" = "y" ]; then
 read -p "Please enter the size of the swap file (MB) : " size
 fallocate -l "$size"M /swapfile
 chmod 600 /swapfile
 mkswap /swapfile
 swapon /swapfile
 echo "/swapfile none swap defaults 0 0" >> /etc/fstab
else
 echo "you do not want to make swap file"
fi
}

function netspeeder(){


if [ "$OS" == 'CentOS' ]; then
 yum install virt-what -y
 wget http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
 rpm -ivh epel-release-6-8.noarch.rpm
 yum install libnet libpcap libnet-devel libpcap-devel
 git clone https://github.com/snooda/net-speeder
 cd net-speeder
 sudo chmod +x ./build.sh
 sudo bash ./build.sh
 virt=virt-what
 if [ "$virt" == "ovz" ]; then
   nohup /root/net_speeder venet0 "ip" >/dev/null 2>&1 &
 else
   nohup /root/net_speeder eth0 "ip" >/dev/null 2>&1 &
   echo "nohup /root/net_speeder eth0 "ip" >/dev/null 2>&1 &" >> /etc/rc.local
 fi
else
 apt-get install virt-what -y
 wget --no-check-certificate https://raw.githubusercontent.com/tennfy/debian_netspeeder_tennfy/master/debian_netspeeder_tennfy.sh
 chmod a+x debian_netspeeder_tennfy.sh
 bash debian_netspeeder_tennfy.sh
 virt=virt-what
 if [ "$virt" == "ovz" ]; then
   nohup /root/net_speeder venet0 "ip" >/dev/null 2>&1 &
 else
   nohup /root/net_speeder eth0 "ip" >/dev/null 2>&1 &
   echo "nohup /root/net_speeder eth0 "ip" >/dev/null 2>&1 &" >> /etc/rc.local
 fi
fi

}


function run(){
start=`date +%s`
update
speedtest
ruisu
swap
ddcc
installover
stop=`date +%s`
echo " script use  $[ stop - start ] seconds"
}

if [ ! -n "$1" ]; then
 run
elif [ $1 = "run" ]; then
 run
elif [ $1 = "lnmp" ]; then
 oneinstack
elif [ $1 = "ss" ]; then
 ss
 socat
elif [ $1 = "rs" ]; then
 ruisu
elif [ $1 = "ddcc" ]; then
 ddcc
elif [ $1 = "netspeeder" ]; then
 netspeeder
elif [ $1 = "swap" ]; then
 swap
else 
	echo "
	print error bash start $1
	bash start lnmp to install lnmp
	bash start ss to install shadowsocks
	"
	exit 1
fi
